version: '3.9'

services:
  yarpapigateway:
    build:
      context: .
      dockerfile: src/ApiGateways/YarpApiGateway/Dockerfile
    container_name: yarpapigateway
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "6000:8080"
    depends_on:
      identityservice.api:
        condition: service_started

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"       # for MassTransit
      - "15672:15672"     # for RabbitMQ web dashboard
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 5s
      timeout: 5s
      retries: 5

  identityservice.api:
    build:
      context: .
      dockerfile: src/Services/Identity/IdentityService.Api/Dockerfile
    container_name: identityservice.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=host.docker.internal;Port=5432;Database=identity_service;Username=postgres;Password=postgres
      - RabbitMQ__Host=rabbitmq
    ports:
      - "7000:8080"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      rabbitmq:
        condition: service_healthy

  appointmentservice.api:
    build:
      context: .
      dockerfile: src/Services/Appointment/AppointmentService.Api/Dockerfile
    container_name: appointmentservice.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=host.docker.internal;Port=5432;Database=appointment_service;Username=postgres;Password=postgres
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__Username=guest
      - RabbitMQ__Password=guest
    ports:
      - "6002:8080"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      rabbitmq:
        condition: service_healthy

  auditsinkservice.api:
    build:
      context: .
      dockerfile: src/Services/_CrossCutting/AuditSink/AuditSinkService.Api/Dockerfile
    container_name: auditsinkservice.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=host.docker.internal;Port=5432;Database=audit_sink_service;Username=postgres;Password=postgres
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__Username=guest
      - RabbitMQ__Password=guest
    ports:
      - "6003:8080"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      rabbitmq:
        condition: service_healthy

  notificationservice.api:
    build:
      context: .
      dockerfile: src/Services/Notification/NotificationService.Api/Dockerfile
    container_name: notificationservice.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__Username=guest
      - RabbitMQ__Password=guest
    ports:
      - "6004:8080"
    depends_on:
      rabbitmq:
        condition: service_healthy

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    ports:
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP HTTP receiver
    volumes:
      - ./infrastructure/otel/otel-collector-config.yaml:/etc/otelcol/config.yaml
    command: ["--config=/etc/otelcol/config.yaml"]
    depends_on:
      - jaeger

  jaeger:
    image: jaegertracing/all-in-one:1.53
    container_name: jaeger
    ports:
      - "16686:16686" # Jaeger UI
      - "6831:6831/udp" # jaeger agent
      - "6832:6832/udp"
      - "14268:14268"
      - "14250:14250"
      - "5778:5778"
