version: '3.9'

services:

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"       # for MassTransit
      - "15672:15672"     # for RabbitMQ web dashboard
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 5s
      timeout: 5s
      retries: 5

  identityservice.api:
    build:
      context: .
      dockerfile: src/Services/Identity/IdentityService.Api/Dockerfile
    container_name: identityservice.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=host.docker.internal;Port=5432;Database=identity_service;Username=postgres;Password=postgres
      - RabbitMQ__Host=rabbitmq
    ports:
      - "7000:8080"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      rabbitmq:
        condition: service_healthy

  appointmentservice.api:
    build:
      context: .
      dockerfile: src/Services/Appointment/AppointmentService.Api/Dockerfile
    container_name: appointmentservice.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=host.docker.internal;Port=5432;Database=appointment_service;Username=postgres;Password=postgres
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__Username=guest
      - RabbitMQ__Password=guest
    ports:
      - "6002:8080"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      rabbitmq:
        condition: service_healthy
